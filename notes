Kubernetes:
-------------
- Kubernetes shortly 'k8s' is an open-source container orchestration system used to automate deployment, scaling and management of containerised applications


Kubernetes Architecture:
-----------------------
- K8s architecture has below componenents
	- kube api-server
	- etcd(persistent store)
	- kube-scheduler
	- kube-controller-manager
	- cloud-controller-manager

- kube api-server:
kube-api-server is an http api-endpoint responsible to take commands and process the requests from the users by co-ordinating with the components in the controlplane and operate on the nodes. Kube api-server can be horizantally scaled(increase in number of api-servers) in order to meet the demand to control all the nodes of the cluster.

- etcd:
is the key value store or database that stores all the current state of the cluster.

- kube-scheduler:
this component watches for newly created pods and is responsible for scheduling pods accross the nodes in the cluster by considering all the constraints specified by the user on those pods.

- kube-controller-manager:
kube controller-manager is responsible for controlling all the control processes in the cluster. As a reason of having many controllers, all the processess are compiled into a single binary to run as a single process. Namely there are few controllers
	- Node controller
	- Job controller
	- Endpoint-slic controller
	- ServiceAccount controller

- cloud-controller-manager:
is a component responsible for linking your cluster into cloud provider's API by isolating the components that interact with cluster and the cloud provider's API.


- Apart from the above components there are few other components in the k8s Architecture which are deployed by control plane to work with nodes
	- Kubelet
	- Kube-proxy
	- cloud DNS
	- 
kubelet: 
is an agent that works on each worker nodes which is responsible for looking after the workloads, services etc on worker nodes

kube-proxy:
Kube-proxy is a network proxy that runs on each node of the cluster implementing network inside and outside of the cluster using 'service' concept.


